{"ast":null,"code":"var _jsxFileName = \"/Users/hoangthang/Desktop/react/WD17307_WEB209/src/components/Mount.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabs = ['posts', 'comments', 'albums'];\nconst Mount = () => {\n  _s();\n  //2 đối số \n  //useEffect( callback,[deps])\n  //  đối số đầu tiên là hàm callback đây là hàm do chúng ta tự tạo \n  // bắt buộc phải có \n  // depenentcies (Không bắt buôc)\n  //1.useEffect(callback)\n  //- Call back được gọi mỗi khi component re-render \n  //2.useEffect(callback,[])\n  //3. useEffect(callback,[deps])\n  const [title, setTitle] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [type, setType] = useState('posts');\n  useEffect(() => {\n    console.log(\"mounted\", title);\n    // fetch('http://localhost:3001/posts')\n    // .then(res=>res.json())\n    // .then(posts => {\n    //     setPosts(posts);\n    // })\n  }, [title]);\n  // document.title = title\n  //lý thuyết chung : callback của useEffect luôn được sau khi componet được mounted\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AHIHI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), tabs.map((tab, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      children: tab\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.name\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this);\n};\n_s(Mount, \"6xwGI6qYm9DuFvP2whdR02ZYXKs=\");\n_c = Mount;\nexport default Mount;\nvar _c;\n$RefreshReg$(_c, \"Mount\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","tabs","Mount","_s","title","setTitle","posts","setPosts","type","setType","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tab","index","value","onChange","e","target","post","name","id","_c","$RefreshReg$"],"sources":["/Users/hoangthang/Desktop/react/WD17307_WEB209/src/components/Mount.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nconst tabs = ['posts','comments','albums'];\nconst Mount = () => {\n    //2 đối số \n    //useEffect( callback,[deps])\n    //  đối số đầu tiên là hàm callback đây là hàm do chúng ta tự tạo \n    // bắt buộc phải có \n    // depenentcies (Không bắt buôc)\n    //1.useEffect(callback)\n    //- Call back được gọi mỗi khi component re-render \n    //2.useEffect(callback,[])\n    //3. useEffect(callback,[deps])\n    const [title,setTitle] = useState<string>('');\n    const [posts,setPosts] = useState<any[]>([]);\n    const [type,setType] = useState<string>('posts');\n    useEffect(()=>{\n        console.log(\"mounted\",title);\n        // fetch('http://localhost:3001/posts')\n        // .then(res=>res.json())\n        // .then(posts => {\n        //     setPosts(posts);\n        // })\n    },[title])\n    // document.title = title\n    //lý thuyết chung : callback của useEffect luôn được sau khi componet được mounted\n    return (<div>\n        <h1>AHIHI</h1>\n        {tabs.map((tab,index)=>(\n            <button\n          \n            key={index}>{tab}</button>\n        ))}\n        <input value={title} onChange={e=>setTitle(e.target.value)}></input>\n        <ul>\n            {posts.map(post=>(\n                 <li key={post.id}>{post.name}</li>\n            ))}\n           \n        </ul>\n    </div>)\n} \nexport default Mount;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,MAAMC,IAAI,GAAG,CAAC,OAAO,EAAC,UAAU,EAAC,QAAQ,CAAC;AAC1C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAAGT,QAAQ,CAAQ,EAAE,CAAC;EAC5C,MAAM,CAACU,IAAI,EAACC,OAAO,CAAC,GAAGX,QAAQ,CAAS,OAAO,CAAC;EAChDD,SAAS,CAAC,MAAI;IACVa,OAAO,CAACC,GAAG,CAAC,SAAS,EAACP,KAAK,CAAC;IAC5B;IACA;IACA;IACA;IACA;EACJ,CAAC,EAAC,CAACA,KAAK,CAAC,CAAC;EACV;EACA;EACA,oBAAQJ,OAAA;IAAAY,QAAA,gBACJZ,OAAA;MAAAY,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbf,IAAI,CAACgB,GAAG,CAAC,CAACC,GAAG,EAACC,KAAK,kBAChBnB,OAAA;MAAAY,QAAA,EAEaM;IAAG,GAAXC,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAC5B,CAAC,eACFhB,OAAA;MAAOoB,KAAK,EAAEhB,KAAM;MAACiB,QAAQ,EAAEC,CAAC,IAAEjB,QAAQ,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpEhB,OAAA;MAAAY,QAAA,EACKN,KAAK,CAACW,GAAG,CAACO,IAAI,iBACVxB,OAAA;QAAAY,QAAA,EAAmBY,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACE,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AACV,CAAC;AAAAb,EAAA,CAtCKD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAuCX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}